apiVersion: v1
kind: Template
metadata:
    name: custom-app
objects:
- apiVersion: v1
  data:
    database-password: redis_password
  kind: Secret
  metadata:
    name: redis
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: vote
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: vote:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/ishida330/example-voting-app.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.6
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - imageChange:
        lastTriggeredImageID: 
      type: ImageChange
    - type: ConfigChange
    - generic:
        secret: bf5856a7334fe44d
      type: Generic
    - github:
        secret: 1ec6e791a9417ef7
      type: GitHub

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: vote
  spec:
    lookupPolicy:
      local: false

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: redis
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: redis
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: redis
      spec:
        containers:
        - env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: redis
          image:
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/redis/data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - redis
        from:
          kind: ImageStreamTag
          name: redis:3.2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: vote
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: vote
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: vote
          deploymentconfig: vote
      spec:
        containers:
        - env:
          - name: REDIS_PASSWORD
            value: redis_password
          image:
          imagePullPolicy: Always
          name: vote
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - vote
        from:
          kind: ImageStreamTag
          name: vote:latest
          namespace: p1
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    name: redis
  spec:
    ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      name: redis
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    name: vote
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: vote
    sessionAffinity: None
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: vote
  spec:
    host: 
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: vote
      weight: 100
    wildcardPolicy: None
